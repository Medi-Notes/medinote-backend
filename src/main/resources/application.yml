spring:
  application:
    name: backend

  servlet:
    multipart:
      max-file-size: 25MB
      max-request-size: 30MB

  profiles:
    default: local

  datasource:
    url: jdbc:mysql://${DB_URL}:${DB_PORT}/${DB_NAME}?serverTimezone=UTC&characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

#  jpa:
#    hibernate:
#      ddl-auto: create


  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  cloud:
    aws:
      region:
        static: ap-northeast-2
      s3:
        bucket-name: ${AWS_S3_BUCKET_NAME}
      sqs:
        queue-name: ${AWS_SQS_QUEUE_NAME}

jwt:
  secret: ${JWT_SECRET_KEY}

oauth:
  kakao:
    client-id: ${KAKAO_REST_API_KEY}
    authorization-grant-type: "authorization_code"
    redirect-uri: "http://localhost:5173/auth/kakao/redirect"

  google:
    client-id: ${GOOGLE_REST_API_KEY}
    client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
    authorization-grant-type: "authorization_code"
    redirect-uri: "http://localhost:5173/auth/google/redirect"

#management:
#  endpoints:
#    web:
#      exposure:
#        include: health,info,prometheus
#  prometheus:
#    metrics:
#      export:
#        enabled: true

#logging:
#  level:
#    org.springframework: debug
